{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/TradExpress/src/Apis.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Apis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Apis = () => {\n  _s();\n\n  const [data, setData] = useState('');\n  const [fetching, setFetching] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      Chart();\n    }, 1000);\n  }, []);\n\n  const Chart = async () => {\n    let respond = await fetch('https://api.coinlore.net/api/tickers/?start=0&limit=5');\n    let jsonData = await respond.json();\n    setData(jsonData.data);\n    setFetching(true);\n    console.log(jsonData.data[1]);\n    let btc = jsonData.data[1];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: fetching && data.map(datum => {\n      const {\n        id,\n        name,\n        percent_change_1h,\n        price_usd\n      } = datum;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: btc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 10\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Apis, \"zYtNwi4ZFusKQin1zOWr7YLDqzg=\");\n\n_c = Apis;\nexport default Apis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apis\");","map":{"version":3,"names":["React","useEffect","useState","Apis","data","setData","fetching","setFetching","setTimeout","Chart","respond","fetch","jsonData","json","console","log","btc","map","datum","id","name","percent_change_1h","price_usd"],"sources":["/Users/mac/Desktop/TradExpress/src/Apis.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport './Apis.css'\n\nconst Apis = () => {\n    const [data, setData] = useState('')\n    const [fetching, setFetching] = useState(false)\n\n    useEffect(() => {\n      setTimeout(() => {\n        \n        Chart()\n      }, 1000);\n\n    }, [])\n\n    const Chart = async() => {\n        let respond = await fetch('https://api.coinlore.net/api/tickers/?start=0&limit=5')\n        let jsonData =await respond.json()\n        setData(jsonData.data)\n        setFetching(true)\n        console.log(jsonData.data[1]);\n        let btc = jsonData.data[1]\n    } \n  return (\n    <div>\n     {fetching && data.map((datum) => {\n       const { id, name, percent_change_1h, price_usd } = datum\n     \n      return (\n        <div key={id} className='api'>\n         <h1>{btc}</h1>\n          \n        </div>\n      )\n\n     })}\n    </div>\n  )\n}\n\nexport default Apis"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACdO,UAAU,CAAC,MAAM;MAEfC,KAAK;IACN,CAHS,EAGP,IAHO,CAAV;EAKD,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMA,KAAK,GAAG,YAAW;IACrB,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAzB;IACA,IAAIC,QAAQ,GAAE,MAAMF,OAAO,CAACG,IAAR,EAApB;IACAR,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;IACAG,WAAW,CAAC,IAAD,CAAX;IACAO,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACR,IAAT,CAAc,CAAd,CAAZ;IACA,IAAIY,GAAG,GAAGJ,QAAQ,CAACR,IAAT,CAAc,CAAd,CAAV;EACH,CAPD;;EAQF,oBACE;IAAA,UACEE,QAAQ,IAAIF,IAAI,CAACa,GAAL,CAAUC,KAAD,IAAW;MAC/B,MAAM;QAAEC,EAAF;QAAMC,IAAN;QAAYC,iBAAZ;QAA+BC;MAA/B,IAA6CJ,KAAnD;MAED,oBACE;QAAc,SAAS,EAAC,KAAxB;QAAA,uBACC;UAAA,UAAKF;QAAL;UAAA;UAAA;UAAA;QAAA;MADD,GAAUG,EAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAOA,CAVY;EADd;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAnCD;;GAAMhB,I;;KAAAA,I;AAqCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}