{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/TradExpress/src/Apis.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Apis = () => {\n  _s();\n\n  const [data, setData] = useState('');\n  const [fetching, setFetching] = useState(false);\n  useEffect(() => {\n    const Chart = async () => {\n      let respond = await fetch('https://api.coinlore.net/api/tickers/?start=0&limit=5');\n      let jsonData = await respond.json();\n      setData(jsonData);\n      setFetching(true);\n      console.log(jsonData);\n    };\n\n    Chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fetching && data.map(datum => {\n      const [id, symbol, name, nameid, rank] = datum;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hello bro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Apis, \"zYtNwi4ZFusKQin1zOWr7YLDqzg=\");\n\n_c = Apis;\nexport default Apis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Apis\");","map":{"version":3,"names":["React","useEffect","useState","Apis","data","setData","fetching","setFetching","Chart","respond","fetch","jsonData","json","console","log","map","datum","id","symbol","name","nameid","rank"],"sources":["/Users/mac/Desktop/TradExpress/src/Apis.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nconst Apis = () => {\n    const [data, setData] = useState('')\n    const [fetching, setFetching] = useState(false)\n\n    useEffect(() => {\n        const Chart = async() => {\n            let respond = await fetch('https://api.coinlore.net/api/tickers/?start=0&limit=5')\n            let jsonData =await respond.json()\n            setData(jsonData)\n            setFetching(true)\n            console.log(jsonData);\n        } \n        Chart()\n\n    }, [])\n\n  return (\n    <div>\n       {fetching && data.map((datum) => {\n        const[id, symbol, name, nameid, rank] = datum\n        return (\n           <div key={id}>\n            <h1>{name}</h1>\n           </div>\n        )\n       })}\n       <h2>hello bro</h2>\n    </div>\n  )\n}\n\nexport default Apis"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMO,KAAK,GAAG,YAAW;MACrB,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAzB;MACA,IAAIC,QAAQ,GAAE,MAAMF,OAAO,CAACG,IAAR,EAApB;MACAP,OAAO,CAACM,QAAD,CAAP;MACAJ,WAAW,CAAC,IAAD,CAAX;MACAM,OAAO,CAACC,GAAR,CAAYH,QAAZ;IACH,CAND;;IAOAH,KAAK;EAER,CAVQ,EAUN,EAVM,CAAT;EAYF,oBACE;IAAA,WACIF,QAAQ,IAAIF,IAAI,CAACW,GAAL,CAAUC,KAAD,IAAW;MAChC,MAAK,CAACC,EAAD,EAAKC,MAAL,EAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,IAA3B,IAAmCL,KAAxC;MACA,oBACG;QAAA,uBACC;UAAA,UAAKG;QAAL;UAAA;UAAA;UAAA;QAAA;MADD,GAAUF,EAAV;QAAA;QAAA;QAAA;MAAA,QADH;IAKA,CAPY,CADhB,eASG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA7BD;;GAAMd,I;;KAAAA,I;AA+BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}